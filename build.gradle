buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            url = 'https://plugins.gradle.org/m2'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

group = 'me.lyric.infinity'
version = 'v4-' + getGitHash()

compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
    version = '1.12.2-14.23.5.2768'
    runDir = 'run'
    mappings = 'snapshot_20180814'
    coreMod = 'me.lyric.infinity.mixin.MixinLoader'
    makeObfSourceJar = false
}

repositories {
    jcenter()
    mavenCentral()

    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'jitpack.io'
        url = "https://jitpack.io"
    }
    maven {
        name = 'lukflug'
        url = "https://lukflug.github.io/maven/"
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.1'
    implementation 'com.github.therealbush:eventbus:1.0.2'
    compile group: 'net.jodah', name: 'typetools', version: '0.5.0'
    compile group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"
    compile('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile group: 'net.jodah', name: 'typetools', version: '0.5.0'
    compile("com.github.therealbush:eventbus:1.0.2")
    compile("com.lukflug:panelstudio:0.2.1")
    compile("com.lukflug:panelstudio-mc12:0.2.0")
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('net.jodah:typetools'))
        include(dependency("com.github.therealbush:eventbus:1.0.2"))
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
        include(dependency("com.lukflug:panelstudio:0.2.1"))
        include(dependency("com.lukflug:panelstudio-mc12:0.2.0"))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = ''
    relocate "com.lukflug.panelstudio", "com.lukflug.panelstudio_0_2_1"
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.infinity.refmap.json'
}

jar.manifest.attributes(
        'MixinConfigs': 'mixins.infinity.json',
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
        'TweakOrder': 0,
        'FMLCorePluginContainsFMLMod': true,
        'FMLCorePlugin': 'me.lyric.infinity.mixin.MixinLoader',
        'ForceLoadAsMod': true,
        'FMLAT': 'infinity_at.cfg'
)

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
build.dependsOn(shadowJar)
